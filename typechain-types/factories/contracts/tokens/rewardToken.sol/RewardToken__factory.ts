/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardToken,
  RewardTokenInterface,
} from "../../../../contracts/tokens/rewardToken.sol/RewardToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f526577617264546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f52544b0000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620002bd565b508060049080519060200190620000af929190620002bd565b505050620000f433620000c76200013160201b60201c565b60ff16600a620000d89190620004ad565b620186a0620000e89190620005ea565b6200013a60201b60201c565b620001046200013160201b60201c565b60ff16600a620001159190620004ad565b620f4240620001259190620005ea565b6005819055506200071f565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001ad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a490620003a5565b60405180910390fd5b620001c160008383620002b360201b60201c565b8060026000828254620001d59190620003f5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200022c9190620003f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002939190620003c7565b60405180910390a3620002af60008383620002b860201b60201c565b5050565b505050565b505050565b828054620002cb9062000655565b90600052602060002090601f016020900481019282620002ef57600085556200033b565b82601f106200030a57805160ff19168380011785556200033b565b828001600101855582156200033b579182015b828111156200033a5782518255916020019190600101906200031d565b5b5090506200034a91906200034e565b5090565b5b80821115620003695760008160009055506001016200034f565b5090565b60006200037c601f83620003e4565b91506200038982620006f6565b602082019050919050565b6200039f816200064b565b82525050565b60006020820190508181036000830152620003c0816200036d565b9050919050565b6000602082019050620003de600083018462000394565b92915050565b600082825260208201905092915050565b600062000402826200064b565b91506200040f836200064b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200044757620004466200068b565b5b828201905092915050565b6000808291508390505b6001851115620004a4578086048111156200047c576200047b6200068b565b5b60018516156200048c5780820291505b80810290506200049c85620006e9565b94506200045c565b94509492505050565b6000620004ba826200064b565b9150620004c7836200064b565b9250620004f67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620004fe565b905092915050565b600082620005105760019050620005e3565b81620005205760009050620005e3565b816001811462000539576002811462000544576200057a565b6001915050620005e3565b60ff8411156200055957620005586200068b565b5b8360020a9150848211156200057357620005726200068b565b5b50620005e3565b5060208310610133831016604e8410600b8410161715620005b45782820a905083811115620005ae57620005ad6200068b565b5b620005e3565b620005c3848484600162000452565b92509050818404811115620005dd57620005dc6200068b565b5b81810290505b9392505050565b6000620005f7826200064b565b915062000604836200064b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000640576200063f6200068b565b5b828202905092915050565b6000819050919050565b600060028204905060018216806200066e57607f821691505b60208210811415620006855762000684620006ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611493806200072f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633eaaf86b1161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b80633eaaf86b146101be57806340c10f19146101dc57806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d6565b6040516100e99190610f10565b60405180910390f35b61010c60048036038101906101079190610d3b565b610368565b6040516101199190610ef5565b60405180910390f35b61012a61038b565b6040516101379190611032565b60405180910390f35b61015a60048036038101906101559190610cec565b610395565b6040516101679190610ef5565b60405180910390f35b6101786103c4565b604051610185919061104d565b60405180910390f35b6101a860048036038101906101a39190610d3b565b6103cd565b6040516101b59190610ef5565b60405180910390f35b6101c6610404565b6040516101d39190611032565b60405180910390f35b6101f660048036038101906101f19190610d3b565b61040a565b005b610212600480360381019061020d9190610c87565b610418565b60405161021f9190611032565b60405180910390f35b610230610460565b60405161023d9190610f10565b60405180910390f35b610260600480360381019061025b9190610d3b565b6104f2565b60405161026d9190610ef5565b60405180910390f35b610290600480360381019061028b9190610d3b565b610569565b60405161029d9190610ef5565b60405180910390f35b6102c060048036038101906102bb9190610cb0565b61058c565b6040516102cd9190611032565b60405180910390f35b6060600380546102e590611162565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611162565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b600080610373610613565b905061038081858561061b565b600191505092915050565b6000600254905090565b6000806103a0610613565b90506103ad8582856107e6565b6103b8858585610872565b60019150509392505050565b60006012905090565b6000806103d8610613565b90506103f98185856103ea858961058c565b6103f49190611084565b61061b565b600191505092915050565b60055481565b6104148282610af3565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046f90611162565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611162565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b5050505050905090565b6000806104fd610613565b9050600061050b828661058c565b905083811015610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610ff2565b60405180910390fd5b61055d828686840361061b565b60019250505092915050565b600080610574610613565b9050610581818585610872565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610fd2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f290610f52565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107d99190611032565b60405180910390a3505050565b60006107f2848461058c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461086c578181101561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590610f72565b60405180910390fd5b61086b848484840361061b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990610fb2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094990610f32565b60405180910390fd5b61095d838383610c53565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90610f92565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a769190611084565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ada9190611032565b60405180910390a3610aed848484610c58565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a90611012565b60405180910390fd5b610b6f60008383610c53565b8060026000828254610b819190611084565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bd69190611084565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c3b9190611032565b60405180910390a3610c4f60008383610c58565b5050565b505050565b505050565b600081359050610c6c8161142f565b92915050565b600081359050610c8181611446565b92915050565b600060208284031215610c9957600080fd5b6000610ca784828501610c5d565b91505092915050565b60008060408385031215610cc357600080fd5b6000610cd185828601610c5d565b9250506020610ce285828601610c5d565b9150509250929050565b600080600060608486031215610d0157600080fd5b6000610d0f86828701610c5d565b9350506020610d2086828701610c5d565b9250506040610d3186828701610c72565b9150509250925092565b60008060408385031215610d4e57600080fd5b6000610d5c85828601610c5d565b9250506020610d6d85828601610c72565b9150509250929050565b610d80816110ec565b82525050565b6000610d9182611068565b610d9b8185611073565b9350610dab81856020860161112f565b610db4816111f2565b840191505092915050565b6000610dcc602383611073565b9150610dd782611203565b604082019050919050565b6000610def602283611073565b9150610dfa82611252565b604082019050919050565b6000610e12601d83611073565b9150610e1d826112a1565b602082019050919050565b6000610e35602683611073565b9150610e40826112ca565b604082019050919050565b6000610e58602583611073565b9150610e6382611319565b604082019050919050565b6000610e7b602483611073565b9150610e8682611368565b604082019050919050565b6000610e9e602583611073565b9150610ea9826113b7565b604082019050919050565b6000610ec1601f83611073565b9150610ecc82611406565b602082019050919050565b610ee081611118565b82525050565b610eef81611122565b82525050565b6000602082019050610f0a6000830184610d77565b92915050565b60006020820190508181036000830152610f2a8184610d86565b905092915050565b60006020820190508181036000830152610f4b81610dbf565b9050919050565b60006020820190508181036000830152610f6b81610de2565b9050919050565b60006020820190508181036000830152610f8b81610e05565b9050919050565b60006020820190508181036000830152610fab81610e28565b9050919050565b60006020820190508181036000830152610fcb81610e4b565b9050919050565b60006020820190508181036000830152610feb81610e6e565b9050919050565b6000602082019050818103600083015261100b81610e91565b9050919050565b6000602082019050818103600083015261102b81610eb4565b9050919050565b60006020820190506110476000830184610ed7565b92915050565b60006020820190506110626000830184610ee6565b92915050565b600081519050919050565b600082825260208201905092915050565b600061108f82611118565b915061109a83611118565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110cf576110ce611194565b5b828201905092915050565b60006110e5826110f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561114d578082015181840152602081019050611132565b8381111561115c576000848401525b50505050565b6000600282049050600182168061117a57607f821691505b6020821081141561118e5761118d6111c3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611438816110da565b811461144357600080fd5b50565b61144f81611118565b811461145a57600080fd5b5056fea2646970667358221220813bc014d6615109a6acfb935b373790f7f5d0692f431cfe2ea7b69ebebfa54464736f6c63430008040033";

type RewardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardToken__factory extends ContractFactory {
  constructor(...args: RewardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardToken> {
    return super.deploy(overrides || {}) as Promise<RewardToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  override connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
